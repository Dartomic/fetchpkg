#################################################################
### Congiguration file for fetchpkg
###
### Copyright (C) 2017 Dylan Schacht
###
### By: Dylan Schacht (deadhead)
### Email: deadhead3492@gmail.com
### Webpage: http://arch-anywhere.org
###
### Any questions, comments, or bug reports may be sent to above
### email address. Enjoy, and keep on using Arch.
###
### License: GPL v2.0
################################################################

config() {

### Set color variables
G=$'\e[0;32m';		### Green
Y=$'\e[0;33m';		### Yellow
M=$'\e[0;95m';		### Magenta
R=$'\e[0;31m';		### Red
B=$'\e[1m';			### Bold
U=$'\e[4m';			### Underline
UB=$'\e[4;1m';		### Underline / Bold
CO=$'\e[0m';		### Color Off
    
### Set program variables
this=${0##*/}		### Name of script
seq=0				### Package list sequence number
pkg_int=0			### Number of packages found
search=false		### Initalize false variables
pac_update=false
aur_update=false
rmdepends=false
build_tmp="/tmp/fetchpkg-$USER"		### Set build directory

}

usage() {

echo -e " ${G}Fetchpkg - ${Y}CLI frontend for pacman / AUR"
echo
echo " Install packages from official arch repos and build from AUR"
echo " Usage: ${G} 'fetchpkg' ${M}- ${Y}main menu"
echo "        ${G} 'fetchpkg [arg]' ${M}- ${Y}search repos for '[arg]'"
echo "        ${G} 'fetchpkg [opts][args]'"
echo
echo " ${Yellow}Options:"
echo "	${G}'-h' '--help' ${Y}- Display this help message"
echo
echo "	${G}'-n' '--no-color' ${Y}- Turn off colors"
echo
echo "	${G}'-R' '--remove' ${Y}- Remove package(s)"
echo
echo "	${G}'-Rd' '--remove-deps' ${Y}- Remove packages(s) and dependencies"
echo
echo "	${G}'-S' '--sync' ${Y}- Install package(s)"
echo
echo "	${G}'-Sua' '--update-all' ${Y}- Update all packages (native/foregin)"
echo
echo "	${G}'-Su' '--update' ${Y}- Update all packages (native only)"
echo

}

fetch_menu() {

pkg_count=$(pacman -Q | wc -l)
aur_count=$(pacman -Qm | wc -l)
sync_count=$(pacman -Qn | wc -l)


echo -e "${Y} |${G}--------------------------------------${Y}|
${Y} |        ${M},   User: ${Y}<${G}$USER${M}@${G}$(hostname)${Y}>
${Y} |       ${M}/#\\   Time: ${G}$(date)
${Y} |      ${M}/###\\   Uptime: ${G}$(uptime -p)
${Y} |     ${M}/#####\\   Distribution: ${G}$(cat /etc/lsb-release | grep "DISTRIB_ID" | cut -c12-) $(uname -o)
${Y} |    ${M}/##${G},-,##\\   ${M}Kernel: ${G}$(uname -srm)
${Y} |   ${G}/##(   )##\\   ${M}CPU: ${G}$(lscpu | grep "Model name:" | cut -c24-)
${Y} |  ${G}/#.--   --.#\\   ${M}RAM:${G} $(free -m | grep "Mem:" | awk '{print $3" MiB / "$2" MiB"}')
${Y} | ${G}/'           '\\   ${M}Packages: ${G}$pkg_count ${M}| Native: ${G}$sync_count ${M}/ Foreign: ${G}$aur_count
${Y} |${G}--------------------------------------${Y}|
${Y} |     #${R}~~~~~~~~~~~~~~~~~~~~~~~~${Y}#       |
${Y} |     # ${G}1.${Y})${M} Install Package(s) ${Y}#       |
${Y} |     # ${G}2.${Y})${M} Remove Package(s)  ${Y}#       |
${Y} |     # ${G}3.${Y})${M} Search Package     ${Y}#       |
${Y} |     # ${G}4.${Y})${M} Update Mirrors     ${Y}#       |
${Y} |     # ${G}5.${Y})${M} Update System      ${Y}#       |
${Y} |     # ${G}6.${Y})${M} Quit               ${Y}#       |
${Y} |     #${R}~~~~~~~~~~~~~~~~~~~~~~~~${Y}#       |
${Y} |${G}--------------------------------------${Y}|
${Y} |${M}<${Y}${B}#${G}----- ${M}${U}Select an option${M} [${G}${UB}1${M}-${G}${UB}6${M}] ${G}-----${Y}${B}#${M}>${Y}|${CO}"
echo -en "${Y} |${M}-${Y}${B}#${G}> ${CO}"
read input

}
