#################################################################
### Congiguration file for fetchpkg
###
### Copyright (C) 2017 Dylan Schacht
###
### By: Dylan Schacht (deadhead)
### Email: deadhead3492@gmail.com
### Webpage: http://arch-anywhere.org
###
### Any questions, comments, or bug reports may be sent to above
### email address. Enjoy, and keep on using Arch.
###
### License: GPL v2.0
################################################################

config() {

### Set color variables
G=$'\e[0;32m';		### Green
Y=$'\e[0;33m';		### Yellow
M=$'\e[0;95m';		### Magenta
R=$'\e[0;31m';		### Red
B=$'\e[1m';			### Bold
U=$'\e[4m';			### Underline
UB=$'\e[4;1m';		### Underline / Bold
CO=$'\e[0m';		### Color Off
    
### Set program variables
cache_dir="/var/cache/pacman/pkg"	### Set default AUR cache directory
build_tmp="/tmp/fetchpkg-$USER"		### Set default AUR build directory
log="$build_tmp/fetchpkg.log"		### Set default log location and name
MAKEFLAG=							### Set this variable to enable makeflag for C builds by default (ex. -j4 -j8)
install_pkg=true					### Setting this to false will disable install (outputs package to cache)
confirm=true						### Setting this to false removes all confirmation
cache=true							### Setting this to false removes AUR package cache
rmdepends=false						### Setting this to true removes depends when using -R flag

}

##########################################################################################
### Main menu
##########################################################################################
#
fetch_menu() {

pkg_count=$(pacman -Q 2>/dev/null | wc -l)
aur_count=$(pacman -Qm 2>/dev/null | wc -l)
sync_count=$(pacman -Qn 2>/dev/null | wc -l)
if [ -f /etc/arch-release ]; then distro="Arch" ; fi

echo -e "${Y} | ${M}User: ${Y}<${G}$USER${M}@${G}$(hostname)${Y}>
${Y} | ${M}Date: ${G}$(date '+%D %X')
${Y} | ${M}Uptime: ${G}$(uptime | awk '{print $3,$4" '${Y}'| '${M}'Users: '${G}'"$6}' | sed 's/,//')
${Y} | ${M}Distribution: ${G}$distro GNU/Linux
${Y} | ${M}Kernel: ${G}$(uname -srm)
${Y} | ${M}CPU: ${G}$(lscpu | grep "Model name:" | sed 's/Model name://;s/  \+//')
${Y} | ${M}RAM:${G} $(free -m | grep "Mem:" | awk '{print $3" MiB / "$2" MiB"}')
${Y} | ${M}Packages: ${G}$pkg_count ${Y}| ${M}Native: ${G}$sync_count ${Y}| ${M}Foreign: ${G}$aur_count
${Y} |${G}--------------------------------------------${Y}|
${Y} |${M}-${Y}${B}#${G}>     #${R}~~~~~~~~~~~~~~~~~~~~~~~~${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}1.${Y})${M} Install Package(s) ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}2.${Y})${M} Remove Package(s)  ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}3.${Y})${M} Search Package     ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}4.${Y})${M} Update Mirrors     ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}5.${Y})${M} Update System      ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}6.${Y})${M} Quit               ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     #${R}~~~~~~~~~~~~~~~~~~~~~~~~${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${G}--------------------------------------------${Y}|
${Y} |${M}<${Y}${B}#${G}-------- ${M}${U}Select an option${M} [${G}1${M}-${G}6${M}] ${G}--------${Y}${B}#${M}>${Y}|${CO}"
echo -en "${Y} |${M}-${Y}${B}#${G}> ${CO}"
read input

}

##########################################################################################
### Usage options
##########################################################################################
#
usage() {

echo -e " ${G}Fetchpkg ${M}- ${Y}${B}CLI frontend for pacman / AUR
 ${Y}Install packages from pacman repos and build from AUR
\n ${B}Usage:
  ${G} 'fetchpkg'                    ${M}- ${Y}Display main menu
  ${G} 'fetchpkg [arg]'              ${M}- ${Y}Search repos for ${M}[${G}arg${M}]
  ${G} 'fetchpkg [opt][pkgopt][arg]' ${M}- ${Y}Where ${M}[${G}arg${M}] ${Y}= package(s)
\n ${Y}${B}Options:
  ${G}'-b' '--builddir /build/path'  ${M} - ${Y}Build directory (default /tmp/fetchpkg-$USER)
  ${G}'-c' '--cachedir /cache/path'  ${M} - ${Y}Cache directory (default /var/cache/pacman/pkg)
  ${G}'-d' '--nocache'               ${M} - ${Y}Disable cache for AUR packages
  ${G}'-f' '--force'                 ${M} - ${Y}Force overwrite existing pkg file with makepkg
  ${G}'-h' '--help'                  ${M} - ${Y}Display this help message
  ${G}'-j[threads]' '--jobs[threads]'${M} - ${Y}Number of [threads] to use when compiling C source
  ${G}'-n' '--noconfirm'             ${M} - ${Y}Don't prompt for conformation
  ${G}'-o' '--nocolor'               ${M} - ${Y}Turn off color output
  ${G}'-s' '--noinstall'             ${M} - ${Y}Don't install (outputs package to cache)
  ${G}'--skipinteg'                  ${M} - ${Y}Skip integrity checks (checksum and PGP) [NOT RECOMMENDED]
\n ${Y}${B}Package Options:
  ${G}'-R'   '--remove'              ${M} - ${Y}Remove package(s)
  ${G}'-Rd'  '--remove-deps'         ${M} - ${Y}Remove packages(s) and dependencies
  ${G}'-S'   '--sync'                ${M} - ${Y}Install package(s)
  ${G}'-Sua' '-Syua' '--update-all'  ${M} - ${Y}Update all packages (pacman/AUR)
  ${G}'-Su'  '-Syu'  '--update'      ${M} - ${Y}Update all packages (pacman only)
  ${G}'-Ss'  '--search'              ${M} - ${Y}Package search${CO}"

}
