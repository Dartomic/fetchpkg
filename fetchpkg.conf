#################################################################
### Congiguration file for fetchpkg
###
### Copyright (C) 2017 Dylan Schacht
###
### By: Dylan Schacht (deadhead)
### Email: deadhead3492@gmail.com
### Webpage: http://arch-anywhere.org
###
### Any questions, comments, or bug reports may be sent to above
### email address. Enjoy, and keep on using Arch.
###
### License: GPL v2.0
################################################################

config() {

### Set color variables
G=$'\e[0;32m';		### Green
Y=$'\e[0;33m';		### Yellow
M=$'\e[0;95m';		### Magenta
R=$'\e[0;31m';		### Red
B=$'\e[1m';			### Bold
U=$'\e[4m';			### Underline
UB=$'\e[4;1m';		### Underline / Bold
CO=$'\e[0m';		### Color Off
    
### Set program variables
seq=0				### Package list sequence number
pkg_int=0			### Number of packages found
confirm=true		### Initalize variables
rmdepends=false					### Setting this to true automatically removes depends when using -R flag
build_tmp="/tmp/fetchpkg-$USER"	### Set build directory

}

##########################################################################################
### Main menu
##########################################################################################
#
fetch_menu() {

pkg_count=$(pacman -Q | wc -l)
aur_count=$(pacman -Qm | wc -l)
sync_count=$(pacman -Qn | wc -l)

echo -e "${Y} | ${M}User: ${Y}<${G}$USER${M}@${G}$(hostname)${Y}>
${Y} | ${M}Date: ${G}$(date '+%D %X')
${Y} | ${M}Uptime: ${G}$(uptime | awk '{print $3,$4" '${Y}'| '${M}'Users: '${G}'"$6}' | sed 's/,//')
${Y} | ${M}Distribution: ${G}$(cat /etc/lsb-release | grep "DISTRIB_ID" | cut -c12-) $(uname -o)
${Y} | ${M}Kernel: ${G}$(uname -srm)
${Y} | ${M}CPU: ${G}$(lscpu | grep "Model name:" | cut -c24-)
${Y} | ${M}RAM:${G} $(free -m | grep "Mem:" | awk '{print $3" MiB / "$2" MiB"}')
${Y} | ${M}Packages: ${G}$pkg_count ${Y}| ${M}Native: ${G}$sync_count ${Y}| ${M}Foreign: ${G}$aur_count
${Y} |${G}--------------------------------------------${Y}|
${Y} |${M}-${Y}${B}#${G}>     #${R}~~~~~~~~~~~~~~~~~~~~~~~~${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}1.${Y})${M} Install Package(s) ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}2.${Y})${M} Remove Package(s)  ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}3.${Y})${M} Search Package     ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}4.${Y})${M} Update Mirrors     ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}5.${Y})${M} Update System      ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     # ${G}6.${Y})${M} Quit               ${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${M}-${Y}${B}#${G}>     #${R}~~~~~~~~~~~~~~~~~~~~~~~~${Y}#       ${G}<${Y}${B}#${M}-${Y}|
${Y} |${G}--------------------------------------------${Y}|
${Y} |${M}<${Y}${B}#${G}-------- ${M}${U}Select an option${M} [${G}1${M}-${G}6${M}] ${G}--------${Y}${B}#${M}>${Y}|${CO}"
echo -en "${Y} |${M}-${Y}${B}#${G}> ${CO}"
read input

}

##########################################################################################
### Usage options
##########################################################################################
#
usage() {

echo -e " ${G}Fetchpkg ${M}- ${Y}${B}CLI frontend for pacman / AUR
 ${Y}Install packages from official arch repos and build from AUR
\n ${B}Usage:
	${G} 'fetchpkg'			${M}- ${Y}Display main menu
	${G} 'fetchpkg [arg]'		${M}- ${Y}Search repos for ${M}[${G}arg${M}]
	${G} 'fetchpkg [opts][args]'	${M}- ${Y}Where ${M}[${G}args${M}] ${Y}= package(s)
\n ${Y}${B}Options:
	${G}'-h' '--help'		${M} - ${Y}Display this help message
	${G}'-c' '--nocolor'	${M} - ${Y}Turn off colors
	${G}'-n' '--noconfirm'	${M} - ${Y}Don't prompt for conformation
\n ${Y}${B}Package Options:
	${G}'-R' '--remove' 	${M} - ${Y}Remove package(s)
	${G}'-Rd''--remove-deps'	${M} - ${Y}Remove packages(s) and dependencies
	${G}'-S' '--sync' 		${M} - ${Y}Install package(s)
	${G}'-Sua''--update-all'	${M} - ${Y}Update all packages (native/foregin)
	${G}'-Su' '--update' 	${M} - ${Y}Update all packages (native only)"

}
